#!env python

# sorry, this is very ugly, but I'm in python 2.5
import sys
sys.path.insert(0,"../..")

from dot11 import Dot11,Dot11DataFrame,Dot11WEPData
from binascii import hexlify
import unittest

class TestDot11WEPData(unittest.TestCase):

    def setUp(self):
        # 802.11 Data Frame 
        #
        data_frame='\x08\x42\x00\x00\xff\xff\xff\xff\xff\xff\x00\x19\xe0\x98\x04\xd4\x00\x10\x4b\x79\x02\x7b\x90\x4b\x1d\x04\x00\x00\x95\x52\x61\x8c\x3c\x37\x26\x6a\x3e\x99\x0e\x16\x8d\xc9\x43\xe3\x50\x4b\x95\xa6\xa5\xd6\x43\xc5\x63\xa5\x19\x58\x71\x8b\xe3\x17\xe2\xc8\x58\x29\x13\x35\xb8\xfe\x61\x61\xb2\x8d\xa3\x75\x6d\xe4\xda\x81\xab\xbc\xcf\xfc\xe0\x58\x5b\xdf\x1a\xd8\x7b\xe7\xb7\x29\x8a\x84\xc7\x5f\xe7\x13\xc9\xde\x71\x07\xa4\xb3\x8c\x7d\x02\xaa\x0c\x3c\xe0\x64\x32\x10\xfb\xa8\x18\xee\x6d\x57\xcb\x48\xee\x59\xdc\xe8\xbf\xa5\x28\x6a\x58\x21\x91\x83\x6a\xcc\x2b\x5a\x7a\x3a\xe8\x67\xac\x33\xfc\x3f\x0b\xcb\xb8\x7b\xb5\x02\xbf\x13\x43\x0e\x46\x7c\x07\x5b\xcc\x7a\xb6\x90\xb4\x05\x43\xda\xf0\x04\xa8\x02\xf5\xc8\x1f\xa8\x43\xea\x9a\xa5\x21\xec\xbc\xbd\x1b\x8d\x5c\x6d\x29\xa8\x59\x6a\xfb\x7b\xdb\x2c\xff\x3b\xf5\x71\xea\xf5\x6d\x2e\xc9\x46\xd0\xf4\xcd\x27\xc7\xa8\xe3\x4b\x59\x18\x19\xb6\x6e\x88\x2e\x95\x66\x98\x13\x05\x17\x72\x99\x30\x5e\xf7\x66\xc4\x4b\xae\xa5\xe0\xb7\x3c\x64\xf1\x65\x23\x96\x86\xf5\xc3\x51\x81\x79\x9b\x7d\xd7\xeb\xcd\xed\x16\x6d\xb7\x50\x9e\x10\xe4\x5c\xd0\xfb\x9b\x41\x32\x22\x0b\xc6\x6b\x71\xfb\xc7\xc9\x63\x6d'
        data=Dot11DataFrame(data_frame)
        self.frame_orig=data.get_frame_body()
        
        self.data=Dot11WEPData(self.frame_orig)
        
    def test_01_get_data(self):
        data='\x1d\x04\x00\x00\x95\x52\x61\x8c\x3c\x37\x26\x6a\x3e\x99\x0e\x16\x8d\xc9\x43\xe3\x50\x4b\x95\xa6\xa5\xd6\x43\xc5\x63\xa5\x19\x58\x71\x8b\xe3\x17\xe2\xc8\x58\x29\x13\x35\xb8\xfe\x61\x61\xb2\x8d\xa3\x75\x6d\xe4\xda\x81\xab\xbc\xcf\xfc\xe0\x58\x5b\xdf\x1a\xd8\x7b\xe7\xb7\x29\x8a\x84\xc7\x5f\xe7\x13\xc9\xde\x71\x07\xa4\xb3\x8c\x7d\x02\xaa\x0c\x3c\xe0\x64\x32\x10\xfb\xa8\x18\xee\x6d\x57\xcb\x48\xee\x59\xdc\xe8\xbf\xa5\x28\x6a\x58\x21\x91\x83\x6a\xcc\x2b\x5a\x7a\x3a\xe8\x67\xac\x33\xfc\x3f\x0b\xcb\xb8\x7b\xb5\x02\xbf\x13\x43\x0e\x46\x7c\x07\x5b\xcc\x7a\xb6\x90\xb4\x05\x43\xda\xf0\x04\xa8\x02\xf5\xc8\x1f\xa8\x43\xea\x9a\xa5\x21\xec\xbc\xbd\x1b\x8d\x5c\x6d\x29\xa8\x59\x6a\xfb\x7b\xdb\x2c\xff\x3b\xf5\x71\xea\xf5\x6d\x2e\xc9\x46\xd0\xf4\xcd\x27\xc7\xa8\xe3\x4b\x59\x18\x19\xb6\x6e\x88\x2e\x95\x66\x98\x13\x05\x17\x72\x99\x30\x5e\xf7\x66\xc4\x4b\xae\xa5\xe0\xb7\x3c\x64\xf1\x65\x23\x96\x86\xf5\xc3\x51\x81\x79\x9b\x7d\xd7\xeb\xcd\xed\x16\x6d\xb7\x50\x9e\x10\xe4\x5c\xd0\xfb\x9b\x41\x32\x22\x0b\xc6\x6b\x71\xfb'
        self.assertEqual(self.data.get_packet(), data)
        
    def test_02_iv(self):
        'Test IV field get/set methods'
        self.assertEqual(self.data.get_iv(), 0x1d0400)
        
        self.data.set_iv(0x1e0501) # Es de 24 bit
        self.assertEqual(self.data.get_iv(), 0x1e0501)
      
suite = unittest.TestLoader().loadTestsFromTestCase(TestDot11WEPData)
unittest.TextTestRunner(verbosity=2).run(suite)

